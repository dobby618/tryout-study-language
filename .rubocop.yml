require:
  - rubocop-performance
  - rubocop-rails
  - rubocop-rspec

AllCops:
  Exclude:
    - db/schema.rb
    - tmp/**/*
    - bin/**/*
    - node_modules/**/*
  TargetRubyVersion: 2.7

################
# Style #
################
# %i が見にくいと思うので、配列記法に統一する
Style/SymbolArray:
  EnforcedStyle: brackets

# For rubocop < 1.0.0
Style/HashEachMethods:
  Enabled: true

# For rubocop < 1.0.0
Style/HashTransformKeys:
  Enabled: true

# For rubocop < 1.0.0
Style/HashTransformValues:
  Enabled: true

# 日本語コメントを許可
Style/AsciiComments:
  Enabled: false

# ドキュメントの無い class / module を許可する
Style/Documentation:
  Enabled: false

# 空メソッドが 1 行だと見にくいので複数行にする
Style/EmptyMethod:
  EnforcedStyle: expanded

# if 文を rubocop:disable にすると end の後にコメントを書く必要があるため
Style/CommentedKeyword:
  Enabled: false

# private は一段深くインデントする
Style/IndentationConsistency:
  EnforcedStyle: indented_internal_methods

# Lamda が見にくいので。
Style/Lambda:
  EnforcedStyle: literal

################
# Layout #
################
# コメントアウトは除外
# 80 は短すぎるので 100 まで許容する
Layout/LineLength:
  IgnoredPatterns: ['\A( *)#']
  Max: 100

################
# Metrics #
################
Metrics/BlockLength:
  Exclude:
    - config/environments/**/*
    - spec/**/*

################
# Rails #
################
Rails/FilePath:
  EnforcedStyle: arguments

################
# RSpec #
################
# 日本語でRspecを記述するので
RSpec/ContextWording:
  Enabled: false

# デフォルト 3 では少ないので
RSpec/NestedGroups:
  Max: 5

# 分かりやすさを優先して複数 expect を書く場合があるので。
RSpec/MultipleExpectations:
  Enabled: false

# System spec で scenario を使いたい
Capybara/FeatureMethods:
  EnabledMethods: ['feature', 'background', 'scenario']

# System spec は遅くなるので expect を複数書きたい
RSpec/ExampleLength:
  Exclude:
    - spec/system/**/*
